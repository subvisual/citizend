import Image from 'next/image';
import clsx from 'clsx';

const navigation = {
  information: [
    { name: 'home', href: '#' },
    { name: 'About', href: '#' },
    { name: 'Support', href: '#' },
    { name: 'Get listed', href: '#' },
  ],
  resources: [
    { name: 'Gitbook', href: '#' },
    { name: 'FAQ', href: '#' },
  ],
  social: [
    {
      name: 'Gitbook',
      href: '#',
      icon: (props: React.SVGProps<SVGSVGElement>) => (
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
          <path
            d="M28.0807 0L33.9098 5.84556L39.8562 11.5717L39.8446 19.827L40.0003 28.0807L34.1547 33.9098L28.4286 39.8562L20.1733 39.8446L11.9196 40.0003L6.09048 34.1547L0.144071 28.4286L0.155718 20.1733L0 11.9196L5.84556 6.09048L11.5717 0.144071L19.827 0.155718L28.0807 0Z"
            fill="currentColor"
          />
          <path
            d="M19.0653 25.1534C19.1373 25.1535 19.2086 25.1684 19.2751 25.1972C19.3415 25.2259 19.4019 25.2681 19.4528 25.3212C19.5036 25.3742 19.5439 25.4372 19.5714 25.5065C19.5989 25.5758 19.613 25.6501 19.6128 25.725C19.6127 25.8 19.5985 25.8742 19.5708 25.9434C19.5432 26.0126 19.5027 26.0755 19.4517 26.1284C19.4007 26.1813 19.3402 26.2233 19.2736 26.2519C19.207 26.2805 19.1357 26.2951 19.0637 26.295C18.9183 26.2948 18.7789 26.2345 18.6762 26.1273C18.5735 26.0201 18.5159 25.8748 18.5161 25.7234C18.5163 25.572 18.5743 25.4269 18.6773 25.32C18.7803 25.2131 18.9198 25.1532 19.0653 25.1534ZM27.6643 21.6238C27.5923 21.6237 27.521 21.6089 27.4545 21.5802C27.388 21.5514 27.3276 21.5093 27.2767 21.4563C27.2258 21.4033 27.1855 21.3403 27.158 21.271C27.1305 21.2018 27.1163 21.1275 27.1164 21.0526C27.1164 20.9776 27.1307 20.9034 27.1583 20.8342C27.1859 20.7649 27.2263 20.702 27.2773 20.6491C27.3282 20.5961 27.3887 20.5541 27.4552 20.5255C27.5218 20.4968 27.5931 20.4821 27.6651 20.4822C27.8106 20.4823 27.95 20.5425 28.0528 20.6496C28.1555 20.7568 28.2132 20.902 28.2131 21.0534C28.213 21.2048 28.1551 21.3499 28.0522 21.4569C27.9493 21.5639 27.8098 21.6239 27.6643 21.6238ZM27.6643 19.2886C27.2147 19.289 26.7836 19.4751 26.4657 19.8061C26.1478 20.137 25.969 20.5857 25.9686 21.0538C25.9686 21.243 25.999 21.4313 26.0583 21.6148L20.4568 24.719C20.3015 24.4842 20.0937 24.2923 19.8513 24.1598C19.6088 24.0272 19.3391 23.9581 19.0653 23.9582C18.4186 23.9582 17.8297 24.3439 17.5442 24.9455L12.5122 22.1832C11.9802 21.8925 11.5824 20.9815 11.6245 20.1517C11.6464 19.7189 11.7899 19.3828 12.0091 19.2528C12.1479 19.1716 12.3149 19.1781 12.4927 19.2748L12.5255 19.2934C13.8593 20.0242 18.2228 22.4171 18.4069 22.5056C18.6901 22.6428 18.8476 22.698 19.3313 22.4593L28.3516 17.5761C28.4842 17.5242 28.6386 17.3918 28.6386 17.1913C28.6386 16.9136 28.3617 16.8039 28.3617 16.8039C27.8484 16.5482 27.0598 16.1641 26.2907 15.789C24.6464 14.9876 22.7829 14.0798 21.9646 13.6332C21.2579 13.2483 20.6893 13.5731 20.5879 13.6381L20.3913 13.7396C16.708 15.6355 11.7782 18.177 11.4974 18.3548C10.9958 18.6731 10.6846 19.3072 10.644 20.094C10.5816 21.342 11.1924 22.6436 12.0668 23.1202L17.3882 25.9767C17.4468 26.3963 17.6485 26.78 17.9564 27.0576C18.2643 27.3352 18.6579 27.4882 19.0653 27.4886C19.5101 27.4878 19.937 27.3053 20.2539 26.9804C20.5709 26.6555 20.7527 26.214 20.7603 25.751L26.6214 22.4439C26.9179 22.6858 27.2868 22.8182 27.6643 22.8182C28.114 22.8178 28.5451 22.6316 28.863 22.3007C29.1809 21.9697 29.3597 21.521 29.3601 21.053C29.3597 20.5849 29.1809 20.1362 28.863 19.8052C28.5451 19.4743 28.114 19.289 27.6643 19.2886Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      name: 'Medium',
      href: '#',
      icon: (props: React.SVGProps<SVGSVGElement>) => (
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
          <path
            d="M28.0812 0L33.9103 5.84556L39.8567 11.5717L39.8451 19.827L40.0008 28.0807L34.1552 33.9098L28.429 39.8562L20.1738 39.8446L11.9201 40.0003L6.09096 34.1547L0.144561 28.4286L0.156205 20.1733L0.000488281 11.9196L5.84605 6.09047L11.5722 0.144073L19.8275 0.155717L28.0812 0Z"
            fill="currentColor"
          />
          <path
            d="M14.3999 15.9306C14.4097 15.838 14.3966 15.7445 14.3618 15.6576C14.327 15.5707 14.2714 15.4928 14.1994 15.4302L12.7132 13.7061V13.4482H17.3262L20.8922 20.9812L24.0269 13.4482H28.4251V13.7061L27.1545 14.878C27.1007 14.9178 27.0591 14.9707 27.0343 15.0313C27.0095 15.0918 27.0024 15.1577 27.0137 15.2218V23.8415C27.0024 23.9056 27.0095 23.9715 27.0343 24.032C27.0591 24.0926 27.1007 24.1455 27.1545 24.1853L28.3957 25.358V25.6166H22.1548V25.3587L23.4405 24.1571C23.5671 24.0354 23.5671 23.9997 23.5671 23.8141V16.8462L19.9931 25.5877H19.511L15.3499 16.8462V22.7053C15.3157 22.9509 15.4008 23.1996 15.5806 23.3776L17.2522 25.3306V25.5877H12.5127V25.3306L14.1835 23.3776C14.2719 23.2894 14.3375 23.1827 14.3751 23.066C14.4127 22.9492 14.4212 22.8257 14.3999 22.7053V15.9306Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      name: 'Discord',
      href: '#',
      icon: (props: React.SVGProps<SVGSVGElement>) => (
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
          <path
            d="M28.0812 0L33.9103 5.84556L39.8567 11.5717L39.8451 19.827L40.0008 28.0807L34.1552 33.9098L28.429 39.8562L20.1738 39.8446L11.9201 40.0003L6.09096 34.1547L0.144561 28.4286L0.156205 20.1733L0.000488281 11.9196L5.84605 6.09047L11.5722 0.144073L19.8275 0.155717L28.0812 0Z"
            fill="currentColor"
          />
          <path
            d="M25.5934 14.8488C24.547 14.3877 23.4428 14.0587 22.3083 13.8698C22.298 13.8682 22.2874 13.8696 22.2781 13.8739C22.2687 13.8783 22.2609 13.8853 22.2558 13.894C22.1136 14.1361 21.9563 14.4527 21.8463 14.7006C20.6234 14.5225 19.3796 14.5225 18.1567 14.7006C18.0341 14.4245 17.8953 14.1552 17.7411 13.894C17.736 13.8854 17.7282 13.8784 17.7188 13.8741C17.7095 13.8698 17.6989 13.8683 17.6887 13.8698C16.554 14.0577 15.4495 14.3869 14.4035 14.8488C14.3946 14.852 14.3871 14.8582 14.3823 14.8662C12.2904 17.867 11.7165 20.7941 11.9979 23.6845C11.9989 23.6981 12.008 23.7116 12.0191 23.7203C13.2372 24.5866 14.5998 25.248 16.0486 25.6763C16.0588 25.6794 16.0698 25.6793 16.08 25.676C16.0902 25.6727 16.099 25.6663 16.1051 25.6579C16.4158 25.2512 16.6921 24.8223 16.9302 24.371C16.9351 24.3617 16.9368 24.3512 16.935 24.3409C16.9332 24.3306 16.928 24.3211 16.9201 24.3139C16.9149 24.3092 16.9087 24.3056 16.9019 24.3033C16.4674 24.1429 16.0465 23.9503 15.6431 23.7271C15.6319 23.721 15.6235 23.7109 15.6197 23.699C15.616 23.6871 15.6171 23.6743 15.623 23.6632C15.6264 23.656 15.6316 23.6497 15.6381 23.6448C15.7228 23.5838 15.8076 23.5199 15.8882 23.456C15.8954 23.4505 15.9039 23.447 15.913 23.4458C15.922 23.4446 15.9313 23.4458 15.9397 23.4492C18.5813 24.6073 21.4408 24.6073 24.0502 23.4492C24.0589 23.4456 24.0685 23.4443 24.0779 23.4455C24.0873 23.4467 24.0962 23.4503 24.1037 23.456C24.1844 23.5199 24.2691 23.5838 24.3538 23.6448C24.3607 23.6496 24.3662 23.656 24.3699 23.6634C24.3735 23.6707 24.3753 23.6789 24.3749 23.687C24.3745 23.6952 24.372 23.7031 24.3676 23.7101C24.3632 23.7171 24.3571 23.7229 24.3498 23.7271C23.9474 23.9523 23.5259 24.1447 23.09 24.3023C23.083 24.3047 23.0767 24.3086 23.0715 24.3136C23.0663 24.3186 23.0622 24.3247 23.0597 24.3313C23.0574 24.3378 23.0565 24.3447 23.057 24.3515C23.0575 24.3583 23.0595 24.365 23.0628 24.371C23.3048 24.8213 23.5822 25.2512 23.8868 25.6579C23.893 25.6663 23.9018 25.6727 23.9119 25.676C23.9221 25.6793 23.9331 25.6794 23.9433 25.6763C25.3946 25.2493 26.7593 24.5878 27.9789 23.7203C27.985 23.7163 27.9901 23.711 27.9938 23.7048C27.9974 23.6985 27.9996 23.6916 28.0001 23.6845C28.337 20.3429 27.4362 17.4399 25.6136 14.8672C25.6118 14.8629 25.609 14.8591 25.6056 14.8559C25.6021 14.8527 25.598 14.8503 25.5934 14.8488ZM17.3246 21.9241C16.5287 21.9241 15.8741 21.2231 15.8741 20.3632C15.8741 19.5024 16.5166 18.8014 17.3246 18.8014C18.1385 18.8014 18.7871 19.5082 18.775 20.3632C18.775 21.2231 18.1325 21.9241 17.3246 21.9241ZM22.6865 21.9241C21.8917 21.9241 21.2361 21.2231 21.2361 20.3632C21.2361 19.5024 21.8786 18.8014 22.6865 18.8014C23.5005 18.8014 24.1501 19.5082 24.137 20.3632C24.137 21.2231 23.5005 21.9241 22.6865 21.9241Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      name: 'X',
      href: '#',
      icon: (props: React.SVGProps<SVGSVGElement>) => (
        <svg
          width="40"
          height="40"
          viewBox="0 0 40 40"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M28.0817 0L33.9108 5.84556L39.8572 11.5717L39.8456 19.827L40.0013 28.0807L34.1557 33.9098L28.4295 39.8562L20.1743 39.8446L11.9205 40.0003L6.09145 34.1547L0.145049 28.4286L0.156693 20.1733L0.000976562 11.9196L5.84654 6.09047L11.5727 0.144073L19.8279 0.155717L28.0817 0Z"
            fill="currentColor"
          />
          <path
            d="M21.3174 18.7749L27.1457 12H25.7646L20.7039 17.8826L16.6619 12H12L18.1122 20.8955L12 28H13.3812L18.7254 21.7878L22.994 28H27.656L21.3174 18.7749ZM19.4257 20.9738L18.8064 20.0881L13.8789 13.0397H16.0003L19.9769 18.728L20.5962 19.6137L25.7652 27.0075H23.6438L19.4257 20.9738Z"
            fill="white"
          />
        </svg>
      ),
    },
    {
      name: 'YouTube',
      href: '#',
      icon: (props: React.SVGProps<SVGSVGElement>) => (
        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" {...props}>
          <path
            d="M28.0817 0L33.9108 5.84556L39.8572 11.5717L39.8456 19.827L40.0013 28.0807L34.1557 33.9098L28.4295 39.8562L20.1743 39.8446L11.9205 40.0003L6.09145 34.1547L0.145049 28.4286L0.156693 20.1733L0.000976562 11.9196L5.84654 6.09047L11.5727 0.144073L19.8279 0.155717L28.0817 0Z"
            fill="currentColor"
          />
          <path
            d="M20.0611 13.4482H20.1653C21.1271 13.4517 26.0006 13.4867 27.3146 13.8388C27.7118 13.9463 28.0738 14.1558 28.3644 14.4463C28.6549 14.7369 28.8639 15.0983 28.9703 15.4945C29.0885 15.9376 29.1716 16.5241 29.2277 17.1292L29.2394 17.2505L29.2652 17.5536L29.2745 17.6749C29.3506 18.7406 29.3599 19.7387 29.3611 19.9567V20.0441C29.3599 20.2703 29.3494 21.336 29.2652 22.446L29.2558 22.5685L29.2453 22.6897C29.1868 23.3567 29.1002 24.0189 28.9703 24.5063C28.8642 24.9027 28.6554 25.2643 28.3648 25.5549C28.0742 25.8455 27.712 26.0548 27.3146 26.162C25.9573 26.5258 20.7983 26.5514 20.0834 26.5526H19.9172C19.5556 26.5526 18.0603 26.5456 16.4923 26.492L16.2934 26.485L16.1916 26.4803L15.9915 26.4721L15.7914 26.464C14.4926 26.4068 13.2558 26.3147 12.686 26.1608C12.2887 26.0538 11.9266 25.8446 11.6361 25.5542C11.3455 25.2638 11.1366 24.9025 11.0303 24.5063C10.9004 24.0201 10.8138 23.3567 10.7553 22.6897L10.7459 22.5673L10.7366 22.446C10.6788 21.656 10.6468 20.8643 10.6406 20.0721L10.6406 19.9287C10.643 19.678 10.6523 18.8117 10.7155 17.8556L10.7237 17.7355L10.7272 17.6749L10.7366 17.5536L10.7623 17.2505L10.774 17.1292C10.8302 16.5241 10.9133 15.9364 11.0314 15.4945C11.1376 15.0981 11.3464 14.7365 11.637 14.4459C11.9276 14.1553 12.2897 13.946 12.6871 13.8388C13.257 13.6873 14.4938 13.594 15.7926 13.5357L15.9915 13.5275L16.1928 13.5205L16.2934 13.517L16.4935 13.5089C17.6071 13.4732 18.7211 13.4533 19.8353 13.4494H20.0611V13.4482ZM18.1293 17.191V22.8087L22.9934 20.001L18.1293 17.191Z"
            fill="white"
          />
        </svg>
      ),
    },
  ],
};

type TNavigationItem = {
  name: string;
  href: string;
  icon?: (props: React.SVGProps<SVGSVGElement>) => JSX.Element;
};

const NavigationItem = ({ name, href, icon: Icon }: TNavigationItem) => {
  return (
    <li key={name}>
      {Icon ? (
        <a
          href={href}
          className="text-mono-200-dark hover:text-blue font-medium"
        >
          <span className="sr-only">{name}</span>
          <Icon className="h-10 w-10" aria-hidden="true" />
        </a>
      ) : (
        <a href={href} className="text-base text-mono-200 hover:text-mono-50">
          {name}
        </a>
      )}
    </li>
  );
};

type TNavigationMenu = {
  title: string;
  items: TNavigationItem[];
  row?: boolean;
};

const NavigationMenu = ({ title, items, row }: TNavigationMenu) => {
  return (
    <div>
      <h4 className="hidden text-base font-medium text-mono-50 md:block">
        {title}
      </h4>
      <ul
        role="list"
        className={clsx(
          'mt-6 flex items-center gap-4 md:items-start',
          row ? 'flex-row' : 'flex-col',
        )}
      >
        {items.map((item) => (
          <NavigationItem key={item.name} {...item} />
        ))}
      </ul>
    </div>
  );
};

export function Footer() {
  return (
    <footer className="bg-background-pattern" aria-labelledby="footer-heading">
      <div className="flex flex-col flex-wrap items-center p-6 md:flex-row md:items-start md:justify-between md:px-27 md:py-14">
        <h2 id="footer-heading" className="sr-only">
          Footer
        </h2>
        <Image
          src="/citizend-logo-framed.svg"
          alt="Citizend logo"
          width={260}
          height={228}
          priority
          className="w-[169px] md:w-[260px]"
        />
        <div className="mt-11 flex flex-col items-center md:mt-10 md:flex-row md:items-start md:gap-16 xl:mt-0">
          <NavigationMenu title="Information" items={navigation.information} />
          <NavigationMenu title="Resources" items={navigation.resources} />
          <NavigationMenu title="Social" items={navigation.social} row />
        </div>
      </div>
      <div className="flex flex-col items-center gap-2 px-6 pb-6 pt-12 md:flex-row-reverse md:justify-end md:gap-0 md:px-27 md:py-14">
        <span className="font-medium text-mono-50 md:ml-14 md:font-medium md:text-mono-200">
          Privacy Policy
        </span>
        <span className="font-medium text-mono-50 md:ml-36 md:font-medium md:text-mono-200">
          Terms & Conditions
        </span>
        <span className=" text-mono-200">
          © 2022 citizend. All rights reserved.
        </span>
      </div>
    </footer>
  );
}
